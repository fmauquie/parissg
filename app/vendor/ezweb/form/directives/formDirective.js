define(["angular","jquery","bootstrap","less!../styles/form"],function(a,b){"use strict";function c(b){if(b=b||{},a.isDefined(b.require))throw"You cannot require because the FormDirective does it";if(a.isDefined(b._parseAttributes))throw"You cannot override _parseAttributes, override _parseExtendedAttributes instead.";if(a.isDefined(b._parseCommonAttributes))throw"You cannot override _parseCommonAttributes, override _parseExtendedAttributes instead.";if(a.isDefined(b._buildAttributesFormElement))throw"You cannot override _buildAttributesFormElement, override _buildExtendedAttributesFormElement instead.";if(a.isDefined(b._buildCommonAttributesFormElement))throw"You cannot override _buildCommonAttributesFormElement, override _buildExtendedAttributesFormElement instead.";if(a.isDefined(b._buildLayoutFormElement))throw"You cannot override _buildLayoutFormElement because it would break the Bootstrap structure.";if(a.isDefined(b._buildCommonAttributesFormElement))throw"You cannot override _buildCommonAttributesFormElement, override _buildExtendedAttributesFormElement instead.";if(a.isDefined(b._postLinking))throw"You cannot override _postLinking.";if(a.isDefined(b.compile)||a.isDefined(b.link)){var d=b.compile,e=b.link;delete b.link,b.compile=function(){var b=c.prototype.compile.apply(this,arguments),f=a.isDefined(d)?d.apply(this,arguments):null;return{pre:function(){b.pre.apply(this,arguments),null!=f&&a.isDefined(f.pre)?f.pre.apply(this,arguments):a.isDefined(e)&&a.isDefined(e.pre)&&e.pre.apply(this,arguments)},post:function(){b.post.apply(this,arguments),null!==f?a.isDefined(f.post)?f.post.apply(this,arguments):a.isFunction(f)&&f.apply(this,arguments):a.isDefined(e)&&(a.isDefined(e.post)?e.post.apply(this,arguments):a.isFunction(e)&&e.apply(this,arguments))}}}}a.extend(this,{restrict:"EA",require:"^form",replace:!0,transclude:!0,initOptions:{}}),a.extend(this,b),a.extend(this.initOptions,{label:null,fieldName:null,type:"text",ngAttributes:"",autocomplete:!1})}var d=0;return c.prototype={autoTransclude:!0,compile:function(c,d){return this.options=b.extend({},this.initOptions),this._parseAttributes(c,d),c.replaceWith(this._buildGroupElement()),{pre:a.bind(this.options,this._preLinking),post:a.bind(this.options,this._postLinking)}},_parseAttributes:function(b,c){a.forEach(c,function(a,b){if(0===b.indexOf("ng")){var d=c.$attr[b];this.options.ngAttributes+=" "+d+'="'+a+'"'}},this),this._parseCommonAttributes(b,c),this._parseExtendedAttributes(b,c)},_parseCommonAttributes:function(a,b){this.options.type=b.ezType||this.options.type,this.options.label=b.hasOwnProperty("ezLabel")?b.ezLabel:"",this.options.fieldName=b.ezName||(b.hasOwnProperty("ngModel")?b.ngModel.replace(/[\.\[\]]/g,"_"):"ezFormField")+d++,this.options.autocomplete="undefined"!=typeof b.ezAutocomplete},_parseExtendedAttributes:function(){},_buildAttributesFormElement:function(){var a=this._buildCommonAttributesFormElement();return a+=this._buildExtendedAttributesFormElement()},_buildCommonAttributesFormElement:function(){return' class="form-control" id="'+this.options.fieldName+'" name="'+this.options.fieldName+'" placeholder="'+this.options.label+'" '+this.options.ngAttributes},_buildExtendedAttributesFormElement:function(){return""},_buildLayoutFormElement:function(a){var b=this.autoTransclude===!0?"<div ng-transclude></div>":"";return"<div ez-control-body>"+a+b+"</div>"},_buildBaseFormElement:function(){return'<input ez-control-element type="'+this.options.type+'" '+this._buildAttributesFormElement()+' /><div class="ez-typeahead-placeholder ez-typeahead-overlay"></div>'},_buildLabelFormElement:function(){var a=this.options.fieldId?this.options.fieldId:this.options.fieldName;return'<label class="control-label" for="'+a+'" ez-control-label>'+this.options.label+"</label>"},_buildErrorElements:function(){return'<div class="ez-errors-placeholder"></div>'},_buildGroupElement:function(){var a='<div class="form-group ez-form-'+this.options.type+'">';return a+=this._buildLabelFormElement(),a+=this._buildLayoutFormElement(this._buildBaseFormElement()+this._buildErrorElements()),a+="</div>"},_preLinking:function(){},_postLinking:function(a,c,d,e){var f=c.controller("formDirective");f.options=this,f.hasInput()&&(a.$watch(function(){return f.ngModelController.$invalid&&(e.ezwebForm.attempted||f.ngModelController.ezwebForm.blurred)},function(a){a?b(c).addClass("has-error"):b(c).removeClass("has-error")}),e.ezwebForm=e.ezwebForm||{},f.options.autocomplete===!0&&(e.ezwebForm.checkAutocomplete=e.ezwebForm.checkAutocomplete||[],e.ezwebForm.checkAutocomplete.push(function(){f.ngModelController.$setViewValue(f.$input.val())}))),f.startPlugins()},controller:["$scope","$element","$attrs",function(b,c,d){this.ngModelController,this.$input,this.options,this.$element=c,this.hasInput=function(){return a.isDefined(this.ngModelController)&&a.isDefined(this.$input)},this.$typeaheadPlaceholder=c.find(".ez-typeahead-placeholder"),this.typeaheadController=null,this.typeaheadTransclude=null,this.setTypeahead=function(c,e){if(this.typeaheadController=c,this.typeaheadTransclude=e,!a.isDefined(d.ngModel))throw"Can't watch the model, ng-model is not defined.";b.$watch(d.ngModel,a.bind(c,c.modelChange))},this.$typeaheadPlaceholder.empty(),this.showTypeahead=function(){this.typeaheadTransclude(a.bind(this,function(a){this.$typeaheadPlaceholder.append(a)}))},this.hideTypeahead=function(){this.$typeaheadPlaceholder.empty()};var e=[];this.addPlugin=function(a){e.push(a)},this.startPlugins=function(){a.forEach(e,function(a){a.apply()})},c.data("$formDirectiveController",this)}]},c});