"use strict";define(["angular","./formDirective","ez-i18n!../locales"],function(a,b,c){return a.module("ezweb.form.directives.checkbox",["ezweb.i18n"]).config(["ezweb.i18n.configurationProvider",function(a){a.registerIfNotDefined("ezweb.form","en",c)}]).directive("ezFormCheckbox",[function(){var a={_parseExtendedAttributes:function(){this.options.type="checkbox"},_buildBaseFormElement:function(){var a=this._buildAttributesFormElement();return a=a.replace("form-control",""),'<div class="checkbox"><label><input type="checkbox" ez-control-element '+a+" />"+this.options.label+"</label></div>"},_buildLabelFormElement:function(){return"<div ez-control-label></div>"}};return new b(a)}]).directive("ezFormCheckboxes",[function(){var a={_parseExtendedAttributes:function(a,b){if(this.options.ngAttributes=this.options.ngAttributes.replace(/ng-model="[^"]*"/,""),this.options.ngModel=b.ngModel,this.options.ngRequired=b.ngRequired,!b.hasOwnProperty("ezOptions"))throw"ezOptions property is mandatory !";if(this.options.ezOptions=b.ezOptions,!b.hasOwnProperty("ezOptionLabel"))throw"ezOptionLabel property is mandatory !";this.options.ezOptionLabel=b.ezOptionLabel,this.options.ezOptionsCheckall=b.hasOwnProperty("ezOptionsCheckall")?b.ezOptionsCheckall:!1,this.options.ezOptionsDisplay=b.hasOwnProperty("ezOptionsDisplay")?b.ezOptionsDisplay:"block",this.options.type="checkbox",this.options.values={valueForTrue:!0,valueForFalse:!1},b.ngTrueValue&&(this.options.values.valueForTrue=b.ngTrueValue),b.ngFalseValue&&(this.options.values.valueForFalse=b.ngFalseValue)},_buildBaseFormElement:function(){var a="block"===this.options.ezOptionsDisplay?"ez-checkbox-block":"ez-checkbox-inline",b=this.options.ngModel?'ez-control-element ez-checkboxes-model ng-model="'+this.options.ngModel+'" ':"";this.options.ngRequired&&(b+='ng-required="'+this.options.ngRequired+'" ');var c=this._buildAttributesFormElement();c=c.replace("form-control",""),c=c.replace(/(id="[^"])(")/,"$1{{item}}$2"),c=c.replace(/ng-required="[^"]*"/,"");var d=this.options.ezOptionsCheckall?"<div ez-checkboxes-check-all></div>":"";return"<div "+b+' class="ez-checkbox-options '+a+'">'+d+'<div ng-repeat="item in '+this.options.ezOptions+'" class="checkbox"><label><input type="checkbox" '+c+' ng-model="'+this.options.ngModel+'[item]" />{{'+this.options.ezOptionLabel+"}}</label></div></div>"}};return new b(a)}]).directive("ezCheckboxesModel",[function(){return{require:["^ezFormCheckboxes","ngModel"],link:function(b,c,d,e){var f=e[0],g=e[1];g.$render=a.noop,g.$isEmpty=function(){var c=f.options.values.valueForTrue,d=!0;return a.forEach(b.$eval(f.options.ezOptions),function(a){d=d&&g.$modelValue[a]!==c}),d},a.isDefined(d.ngRequired)&&b.$watch(function(){return g.$modelValue},function(){b.$eval(d.ngRequired)?g.$setValidity("required",!g.$isEmpty()):g.$setValidity("required",!0)},!0),c.on("click.ezCheckboxesModel",'input[type="checkbox"]',function(){f.ngModelController.ezwebForm.blurred=!0})}}}]).directive("ezCheckboxesCheckAll",[function(){return{template:'<a ng-click="checkAll()"><span ng-if="!allChecked()">{{"ezweb.form:checkbox.checkAll" | i18next}}</span><span ng-if="allChecked()">{{"ezweb.form:checkbox.uncheckAll" | i18next}}</span></a>',scope:{},require:"^ezFormCheckboxes",link:function(b,c,d,e){function f(){return b.$parent.$eval(e.options.ezOptions)}b.checkAll=function(){var c=b.allChecked()?e.options.values.valueForFalse:e.options.values.valueForTrue;a.forEach(f(),function(a){"$"!==a[0]&&(e.ngModelController.$modelValue[a]=c)}),e.ngModelController.ezwebForm.blurred=!0},b.allChecked=function(){var b=!0,c=e.options.values.valueForTrue;return a.forEach(f(),function(a){"$"!==a[0]&&(b=b&&e.ngModelController.$modelValue[a]===c)}),b}}}}])});