define(["ngMocks","ezweb/portal/services/portalDataService"],function(){describe("** Portal data service testing **",function(){function a(){var a=e.defer();return a.promise}function b(){return[a(),a()]}function c(){return{xs:0,md:0,sm:3,lg:0}}var d,e;beforeEach(module("ezweb.portal.services.data")),beforeEach(inject(["ezweb.portal.services.data","$q",function(a,b){d=a,e=b}])),it("Should define the service.",function(){expect(d).toBeDefined()}),it("Should throw an exception if data is undefined.",function(){expect(angular.bind(this,d.formatData)).toThrow()}),it("Should return the data unchanged if the expectedLength is undefined.",function(){var a=d.formatData(b());expect(a.length).toEqual(2)}),it("Should not accept negative values.",function(){expect(angular.bind(this,d.formatData,b(),-1)).toThrow()}),it("Should truncate the data if the expected length is lesser than the current data length.",function(){var a=d.formatData(b(),1);expect(a.length).toEqual(1)}),it("Should push specific objects if the expected length is greater than the current data length.",function(){var a=d.formatData(b(),3);expect(a.length).toEqual(3),expect(a[2].empty).toBeTruthy()}),it("Should throw an exception for undefined arguments.",function(){expect(angular.bind(this,d.extendRowSize)).toThrow()}),it("Should return the default rowSize if the scope rowSize is undefined.",function(){var a=c(),b=d.extendRowSize(a,void 0);expect(b).toEqual(a)}),it("Should extend the properties if the rowSize is a valid object.",function(){var a=c(),b=d.extendRowSize(a,{sm:4});expect(b.xs).toEqual(0),expect(b.sm).toEqual(4),expect(b.md).toEqual(4),expect(b.lg).toEqual(4)})})});